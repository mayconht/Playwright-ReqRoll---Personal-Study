name: Build, Test and Analyze

on:
  workflow_dispatch:
    inputs:
      browser_type:
        description: 'Browser type'
        required: false
        default: 'chromium'
        type: choice
        options:
        - chromium
        - firefox
        - webkit
      headless:
        description: 'Run in headless mode'
        required: false
        default: true
        type: boolean
      categories:
        description: 'Test categories to run (e.g., Login,Search)'
        required: false
        default: 'Login,Search'
        type: string
      enable_tracing:
        description: 'Enable tracing'
        required: false
        default: true
        type: boolean
      enable_video:
        description: 'Enable video recording'
        required: false
        default: true
        type: boolean
      enable_screenshots:
        description: 'Enable screenshots'
        required: false
        default: true
        type: boolean
  push:
    branches: [ main, master, develop, dev ]
  pull_request:
    branches: [ main, master, develop, dev ]
    types: [opened, synchronize, reopened]
    
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-analyze:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest    
    env:
      CI: true
      PLAYWRIGHT_BROWSERS_PATH: ./browsers
      REPORTS__PATH: ${{ github.workspace }}/reports
      TRACING__TRACESPATH: Playwright-Traces
      VIDEO__DIR: Playwright-Videos
      SCREENSHOTS__DIR: Playwright-Screenshots
      DOWNLOADS__PATH: Downloads
      BROWSER__TYPE: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.browser_type || 'chromium' }}
      BROWSER__HEADLESS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.headless || 'true' }}
      TRACING__SAVEONPASS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.enable_tracing || 'true' }}
      VIDEO__RECORD: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.enable_video || 'true' }}
      SCREENSHOTS__ONSUCCESS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.enable_screenshots || 'true' }}
      SCREENSHOTS__ONFAILURE: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.enable_screenshots || 'true' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Setup dotnet
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 8.0.x
        
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/browsers
        key: ${{ runner.os }}-playwright-local
        restore-keys: |
          ${{ runner.os }}-playwright-
        
    - name: Build & Install
      run: dotnet build
      
    - name: Install browsers
      run: PLAYWRIGHT_BROWSERS_PATH=${{ github.workspace }}/browsers pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps --only-shell 
      
    - name: Run Tests
      run: PLAYWRIGHT_BROWSERS_PATH=${{ github.workspace }}/browsers dotnet test --logger trx --results-directory ./TestResults/

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: TestResults/**/*.trx

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/

    - name: Upload Playwright artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-artifacts
        path: reports/
